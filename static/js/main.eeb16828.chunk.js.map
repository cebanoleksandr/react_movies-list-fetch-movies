{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","setMovies","_useState","useState","_useState2","_slicedToArray","query","setQuery","_useState3","_useState4","isAddBtn","setIsAddBtn","_useState5","_useState6","setMovie","_useState7","_useState8","isError","setIsError","_useState9","_useState10","isLoading","setIsLoading","searchMovieHandler","e","term","preventDefault","fetch","concat","then","res","json","catch","Response","Error","getMovie","data","defaultImg","Poster","newMovie","Title","Plot","imdbID","_Fragment","htmlFor","type","id","placeholder","classNames","value","onChange","target","disabled","onClick","film","newMovies","_toConsumableArray","addMovie","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eeb16828.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\ntype Props = {\n  setMovies: (movie: Movie[]) => void;\n  movies: Movie[];\n};\n\nexport const FindMovie: React.FC<Props> = ({ setMovies, movies }) => {\n  const [query, setQuery] = useState('');\n  const [isAddBtn, setIsAddBtn] = useState(false);\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const addMovie = (film: Movie | null) => {\n    if (film) {\n      const newMovies = [...movies, film];\n\n      setMovies(newMovies);\n      setMovie(null);\n      setIsError(false);\n      setQuery('');\n      setIsAddBtn(false);\n    }\n  };\n\n  const searchMovieHandler = (\n    e: React.MouseEvent<HTMLButtonElement>,\n    term: string,\n  ) => {\n    e.preventDefault();\n\n    setIsLoading(true);\n\n    getMovie(term).then(data => {\n      if ('Error' in data) {\n        setIsError(true);\n        setIsAddBtn(false);\n      } else {\n        setIsError(false);\n        setIsAddBtn(true);\n\n        const defaultImg = data.Poster === 'N/A'\n          ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n          : data.Poster;\n          /* eslint-disable-next-line */\n        const imdbUrl = 'https://mate-academy.github.io/react_movies-list-fetch-movies/images/imdb-logo.jpeg';\n\n        const newMovie: Movie = {\n          title: data.Title,\n          description: data.Plot,\n          imgUrl: data.Poster || defaultImg,\n          imdbUrl,\n          imdbId: data.imdbID,\n        };\n\n        setMovie(newMovie);\n      }\n\n      setIsLoading(false);\n    });\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', {\n                'is-danger': isError,\n              })}\n              value={query}\n              onChange={(e) => setQuery(e.target.value)}\n            />\n          </div>\n\n          {isError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button is-light', {\n                'is-loading': isLoading,\n              })}\n              disabled={!query}\n              onClick={(e) => searchMovieHandler(e, query)}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {isAddBtn && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => addMovie(movie)}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=25e7dcfc';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          setMovies={setMovies}\n          movies={movies}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}